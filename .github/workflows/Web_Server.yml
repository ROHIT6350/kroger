name: CI for XAMPP Web Server

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build Stage - Checkout Repositories
    runs-on: self-hosted

    steps:
      - name: Checkout Repo A (CI pipeline repo)
        uses: actions/checkout@v3

      - name: Checkout Repo B (private via GitHub deploy key)
        uses: actions/checkout@v3
        with:
          repository: ROHIT6350/test_private-
          ssh-key: ${{ secrets.GH_DEPLOY_KEY }}
          ref: main
          path: web
          persist-credentials: false
          ssh-strict: false

      - name: Debug Folder Structure
        run: ls -R web

      - name: Archive Website Code
        run: |
          tar -czf website.tar.gz -C web .

      - name: Upload Website Artifact
        uses: actions/upload-artifact@v4
        with:
          name: website-code
          path: website.tar.gz

  deploy:
    name: Deploy Stage - Transfer to XAMPP Server
    runs-on: self-hosted
    needs: build

    steps:
      - name: Download Website Artifact
        uses: actions/download-artifact@v4
        with:
          name: website-code
          path: .

      - name: Extract Artifact
        run: |
          tar -xzf website.tar.gz

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.SERVER_SSH_KEY }}" > id_rsa
          chmod 600 id_rsa

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i id_rsa \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "echo Connected OK"

      - name: Deploy Website to XAMPP Server
        run: |
          scp -i id_rsa -o StrictHostKeyChecking=no -r web/* \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/opt/lampp/htdocs/

      - name: Restart Apache in XAMPP
        run: |
          ssh -i id_rsa -o StrictHostKeyChecking=no \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} \
            "sudo /opt/lampp/lampp restartapache"

  test:
    name: Test Stage - Validate Website
    runs-on: self-hosted
    needs: deploy

    steps:
      - name: Wait for Web Server
        run: sleep 10

      - name: Test Website URL
        run: |
          curl -I http://${{ secrets.SERVER_IP }} | grep "200 OK" || exit 1
